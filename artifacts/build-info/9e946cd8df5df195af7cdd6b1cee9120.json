{
	"id": "9e946cd8df5df195af7cdd6b1cee9120",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"ba.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.5.9;\ncontract Ballot {\n\n    struct Voter {\n        uint weight;\n        bool voted;\n        uint8 vote;\n        //address delegate;\n    }\n    struct Proposal {\n        uint voteCount;\n    }\n    enum Stage {Init,Reg, Vote, Done}\n    Stage public stage = Stage.Init;\n    \n    address chairperson;\n    mapping(address => Voter) voters;\n    Proposal[] proposals;\n\n    event votingCompleted();\n    \n    uint startTime;\n    //modifiers\n    modifier validStage(Stage reqStage)\n    { require(stage == reqStage);\n      _;\n    }\n\n\n    /// Create a new ballot with $(_numProposals) different proposals.\n    constructor(uint8 _numProposals) public  {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 2; // weight is 2 for testing purposes\n        proposals.length = _numProposals;\n        stage = Stage.Reg;\n        startTime = now;\n    }\n\n    /// Give $(toVoter) the right to vote on this ballot.\n    /// May only be called by $(chairperson).\n    function register(address toVoter) public validStage(Stage.Reg) {\n        //if (stage != Stage.Reg) {return;}\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\n        voters[toVoter].weight = 1;\n        voters[toVoter].voted = false;\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; }        \n    }\n\n    /// Give a single vote to proposal $(toProposal).\n    function vote(uint8 toProposal) public validStage(Stage.Vote)  {\n       // if (stage != Stage.Vote) {return;}\n        Voter storage sender = voters[msg.sender];\n        if (sender.voted || toProposal >= proposals.length) return;\n        sender.voted = true;\n        sender.vote = toProposal;   \n        proposals[toProposal].voteCount += sender.weight;\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Done; emit votingCompleted();}        \n        \n    }\n\n    function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal) {\n       //if(stage != Stage.Done) {return;}\n        uint256 winningVoteCount = 0;\n        for (uint8 prop = 0; prop < proposals.length; prop++)\n            if (proposals[prop].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[prop].voteCount;\n                _winningProposal = prop;\n            }\n       assert (winningVoteCount > 0);\n\n    }\n}\n\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ba.sol": {
				"Ballot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "votingCompleted",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"internalType": "enum Ballot.Stage",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint8",
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ba.sol\":60:2346  contract Ballot {... */\n  mstore(0x40, 0x80)\n    /* \"ba.sol\":308:318  Stage.Init */\n  0x00\n    /* \"ba.sol\":287:318  Stage public stage = Stage.Init */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ba.sol\":651:903  constructor(uint8 _numProposals) public  {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"ba.sol\":651:903  constructor(uint8 _numProposals) public  {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_3:\n    /* \"ba.sol\":651:903  constructor(uint8 _numProposals) public  {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"ba.sol\":716:726  msg.sender */\n  caller\n    /* \"ba.sol\":702:713  chairperson */\n  0x00\n  0x01\n    /* \"ba.sol\":702:726  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ba.sol\":765:766  2 */\n  0x02\n    /* \"ba.sol\":736:742  voters */\n  0x01\n    /* \"ba.sol\":736:755  voters[chairperson] */\n  0x00\n    /* \"ba.sol\":743:754  chairperson */\n  dup1\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ba.sol\":736:755  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"ba.sol\":736:762  voters[chairperson].weight */\n  0x00\n  add\n    /* \"ba.sol\":736:766  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ba.sol\":831:844  _numProposals */\n  dup1\n    /* \"ba.sol\":812:844  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"ba.sol\":812:821  proposals */\n  0x02\n    /* \"ba.sol\":812:844  proposals.length = _numProposals */\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ba.sol\":862:871  Stage.Reg */\n  0x01\n    /* \"ba.sol\":854:859  stage */\n  0x00\n  dup1\n    /* \"ba.sol\":854:871  stage = Stage.Reg */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  invalid\ntag_8:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ba.sol\":893:896  now */\n  timestamp\n    /* \"ba.sol\":881:890  startTime */\n  0x03\n    /* \"ba.sol\":881:896  startTime = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ba.sol\":651:903  constructor(uint8 _numProposals) public  {... */\n  pop\n    /* \"ba.sol\":60:2346  contract Ballot {... */\n  jump(tag_9)\ntag_7:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  dup2\n  dup4\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\ntag_10:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_12:\n  tag_13\n  swap2\n  swap1\ntag_14:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup1\n  dup3\n  add\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_14)\ntag_15:\n  pop\n  swap1\n  jump\ntag_13:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ba.sol\":60:2346  contract Ballot {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ba.sol\":60:2346  contract Ballot {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4420e486\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ba.sol\":1013:1349  function register(address toVoter) public validStage(Stage.Reg) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"ba.sol\":1013:1349  function register(address toVoter) public validStage(Stage.Reg) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"ba.sol\":1879:2344  function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ba.sol\":1409:1873  function vote(uint8 toProposal) public validStage(Stage.Vote)  {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"ba.sol\":1409:1873  function vote(uint8 toProposal) public validStage(Stage.Vote)  {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"ba.sol\":287:318  Stage public stage = Stage.Init */\n    tag_6:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ba.sol\":1013:1349  function register(address toVoter) public validStage(Stage.Reg) {... */\n    tag_9:\n        /* \"ba.sol\":1066:1075  Stage.Reg */\n      0x01\n        /* \"ba.sol\":548:556  reqStage */\n      dup1\n        /* \"ba.sol\":539:556  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_19\n      jumpi\n      invalid\n    tag_19:\n        /* \"ba.sol\":539:544  stage */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ba.sol\":539:556  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n      eq\n        /* \"ba.sol\":531:557  require(stage == reqStage) */\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n        /* \"ba.sol\":1149:1160  chairperson */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ba.sol\":1135:1160  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ba.sol\":1135:1145  msg.sender */\n      caller\n        /* \"ba.sol\":1135:1160  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ba.sol\":1135:1185  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_23\n      jumpi\n      pop\n        /* \"ba.sol\":1164:1170  voters */\n      0x01\n        /* \"ba.sol\":1164:1179  voters[toVoter] */\n      0x00\n        /* \"ba.sol\":1171:1178  toVoter */\n      dup4\n        /* \"ba.sol\":1164:1179  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ba.sol\":1164:1185  voters[toVoter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ba.sol\":1135:1185  msg.sender != chairperson || voters[toVoter].voted */\n    tag_23:\n        /* \"ba.sol\":1131:1194  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_24\n      jumpi\n        /* \"ba.sol\":1187:1194  return; */\n      jump(tag_22)\n        /* \"ba.sol\":1131:1194  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_24:\n        /* \"ba.sol\":1228:1229  1 */\n      0x01\n        /* \"ba.sol\":1203:1209  voters */\n      dup1\n        /* \"ba.sol\":1203:1218  voters[toVoter] */\n      0x00\n        /* \"ba.sol\":1210:1217  toVoter */\n      dup5\n        /* \"ba.sol\":1203:1218  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ba.sol\":1203:1225  voters[toVoter].weight */\n      0x00\n      add\n        /* \"ba.sol\":1203:1229  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ba.sol\":1263:1268  false */\n      0x00\n        /* \"ba.sol\":1239:1245  voters */\n      0x01\n        /* \"ba.sol\":1239:1254  voters[toVoter] */\n      0x00\n        /* \"ba.sol\":1246:1253  toVoter */\n      dup5\n        /* \"ba.sol\":1239:1254  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ba.sol\":1239:1260  voters[toVoter].voted */\n      0x01\n      add\n      0x00\n        /* \"ba.sol\":1239:1268  voters[toVoter].voted = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ba.sol\":1300:1310  30 seconds */\n      0x1e\n        /* \"ba.sol\":1289:1298  startTime */\n      sload(0x03)\n        /* \"ba.sol\":1289:1310  startTime+ 30 seconds */\n      add\n        /* \"ba.sol\":1282:1285  now */\n      timestamp\n        /* \"ba.sol\":1282:1311  now > (startTime+ 30 seconds) */\n      gt\n        /* \"ba.sol\":1278:1335  if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; } */\n      iszero\n      tag_25\n      jumpi\n        /* \"ba.sol\":1322:1332  Stage.Vote */\n      0x02\n        /* \"ba.sol\":1314:1319  stage */\n      0x00\n      dup1\n        /* \"ba.sol\":1314:1332  stage = Stage.Vote */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ba.sol\":1278:1335  if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; } */\n    tag_25:\n        /* \"ba.sol\":565:566  _ */\n    tag_22:\n        /* \"ba.sol\":1013:1349  function register(address toVoter) public validStage(Stage.Reg) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ba.sol\":1879:2344  function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal) {... */\n    tag_11:\n        /* \"ba.sol\":1950:1972  uint8 _winningProposal */\n      0x00\n        /* \"ba.sol\":1924:1934  Stage.Done */\n      0x03\n        /* \"ba.sol\":548:556  reqStage */\n      dup1\n        /* \"ba.sol\":539:556  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n        /* \"ba.sol\":539:544  stage */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ba.sol\":539:556  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      eq\n        /* \"ba.sol\":531:557  require(stage == reqStage) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"ba.sol\":2027:2051  uint256 winningVoteCount */\n      0x00\n        /* \"ba.sol\":2054:2055  0 */\n      dup1\n        /* \"ba.sol\":2027:2055  uint256 winningVoteCount = 0 */\n      swap1\n      pop\n        /* \"ba.sol\":2070:2080  uint8 prop */\n      0x00\n        /* \"ba.sol\":2083:2084  0 */\n      dup1\n        /* \"ba.sol\":2070:2084  uint8 prop = 0 */\n      swap1\n      pop\n        /* \"ba.sol\":2065:2299  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n    tag_32:\n        /* \"ba.sol\":2093:2102  proposals */\n      0x02\n        /* \"ba.sol\":2093:2109  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"ba.sol\":2086:2090  prop */\n      dup2\n        /* \"ba.sol\":2086:2109  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"ba.sol\":2065:2299  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n      iszero\n      tag_33\n      jumpi\n        /* \"ba.sol\":2163:2179  winningVoteCount */\n      dup2\n        /* \"ba.sol\":2135:2144  proposals */\n      0x02\n        /* \"ba.sol\":2145:2149  prop */\n      dup3\n        /* \"ba.sol\":2135:2150  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"ba.sol\":2135:2160  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"ba.sol\":2135:2179  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"ba.sol\":2131:2299  if (proposals[prop].voteCount > winningVoteCount) {... */\n      iszero\n      tag_37\n      jumpi\n        /* \"ba.sol\":2218:2227  proposals */\n      0x02\n        /* \"ba.sol\":2228:2232  prop */\n      dup2\n        /* \"ba.sol\":2218:2233  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"ba.sol\":2218:2243  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"ba.sol\":2199:2243  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"ba.sol\":2280:2284  prop */\n      dup1\n        /* \"ba.sol\":2261:2284  _winningProposal = prop */\n      swap4\n      pop\n        /* \"ba.sol\":2131:2299  if (proposals[prop].voteCount > winningVoteCount) {... */\n    tag_37:\n        /* \"ba.sol\":2111:2117  prop++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"ba.sol\":2065:2299  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n      jump(tag_32)\n    tag_33:\n      pop\n        /* \"ba.sol\":2334:2335  0 */\n      0x00\n        /* \"ba.sol\":2315:2331  winningVoteCount */\n      dup2\n        /* \"ba.sol\":2315:2335  winningVoteCount > 0 */\n      gt\n        /* \"ba.sol\":2307:2336  assert (winningVoteCount > 0) */\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n        /* \"ba.sol\":565:566  _ */\n      pop\n        /* \"ba.sol\":1879:2344  function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"ba.sol\":1409:1873  function vote(uint8 toProposal) public validStage(Stage.Vote)  {... */\n    tag_14:\n        /* \"ba.sol\":1459:1469  Stage.Vote */\n      0x02\n        /* \"ba.sol\":548:556  reqStage */\n      dup1\n        /* \"ba.sol\":539:556  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n        /* \"ba.sol\":539:544  stage */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ba.sol\":539:556  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      invalid\n    tag_43:\n      eq\n        /* \"ba.sol\":531:557  require(stage == reqStage) */\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n        /* \"ba.sol\":1527:1547  Voter storage sender */\n      0x00\n        /* \"ba.sol\":1550:1556  voters */\n      0x01\n        /* \"ba.sol\":1550:1568  voters[msg.sender] */\n      0x00\n        /* \"ba.sol\":1557:1567  msg.sender */\n      caller\n        /* \"ba.sol\":1550:1568  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ba.sol\":1527:1568  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"ba.sol\":1582:1588  sender */\n      dup1\n        /* \"ba.sol\":1582:1594  sender.voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ba.sol\":1582:1628  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_46\n      jumpi\n      pop\n        /* \"ba.sol\":1612:1621  proposals */\n      0x02\n        /* \"ba.sol\":1612:1628  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"ba.sol\":1598:1608  toProposal */\n      dup4\n        /* \"ba.sol\":1598:1628  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"ba.sol\":1582:1628  sender.voted || toProposal >= proposals.length */\n    tag_46:\n        /* \"ba.sol\":1578:1637  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_47\n      jumpi\n        /* \"ba.sol\":1630:1637  return; */\n      pop\n      jump(tag_45)\n        /* \"ba.sol\":1578:1637  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_47:\n        /* \"ba.sol\":1661:1665  true */\n      0x01\n        /* \"ba.sol\":1646:1652  sender */\n      dup2\n        /* \"ba.sol\":1646:1658  sender.voted */\n      0x01\n      add\n      0x00\n        /* \"ba.sol\":1646:1665  sender.voted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ba.sol\":1689:1699  toProposal */\n      dup3\n        /* \"ba.sol\":1675:1681  sender */\n      dup2\n        /* \"ba.sol\":1675:1686  sender.vote */\n      0x01\n      add\n      0x01\n        /* \"ba.sol\":1675:1699  sender.vote = toProposal */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ba.sol\":1747:1753  sender */\n      dup1\n        /* \"ba.sol\":1747:1760  sender.weight */\n      0x00\n      add\n      sload\n        /* \"ba.sol\":1712:1721  proposals */\n      0x02\n        /* \"ba.sol\":1722:1732  toProposal */\n      dup5\n        /* \"ba.sol\":1712:1733  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"ba.sol\":1712:1743  proposals[toProposal].voteCount */\n      0x00\n      add\n      0x00\n        /* \"ba.sol\":1712:1760  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ba.sol\":1792:1802  30 seconds */\n      0x1e\n        /* \"ba.sol\":1781:1790  startTime */\n      sload(0x03)\n        /* \"ba.sol\":1781:1802  startTime+ 30 seconds */\n      add\n        /* \"ba.sol\":1774:1777  now */\n      timestamp\n        /* \"ba.sol\":1774:1803  now > (startTime+ 30 seconds) */\n      gt\n        /* \"ba.sol\":1770:1850  if (now > (startTime+ 30 seconds)) {stage = Stage.Done; emit votingCompleted();} */\n      iszero\n      tag_50\n      jumpi\n        /* \"ba.sol\":1814:1824  Stage.Done */\n      0x03\n        /* \"ba.sol\":1806:1811  stage */\n      0x00\n      dup1\n        /* \"ba.sol\":1806:1824  stage = Stage.Done */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_51\n      jumpi\n      invalid\n    tag_51:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ba.sol\":1831:1848  votingCompleted() */\n      0x6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef035382351\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ba.sol\":1770:1850  if (now > (startTime+ 30 seconds)) {stage = Stage.Done; emit votingCompleted();} */\n    tag_50:\n        /* \"ba.sol\":565:566  _ */\n      pop\n    tag_45:\n        /* \"ba.sol\":1409:1873  function vote(uint8 toProposal) public validStage(Stage.Vote)  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ba.sol\":287:318  Stage public stage = Stage.Init */\n    tag_16:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582073d1e1b77a16bbcb63c64ed2a6333b8b746aa69867bf5b2aadbfc726933258f264736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b506040516106f53803806106f58339818101604052602081101561005657600080fd5b810190808051906020019092919050505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816101229190610153565b5060016000806101000a81548160ff0219169083600381111561014157fe5b021790555042600381905550506101a6565b81548183558181111561017a57818360005260206000209182019101610179919061017f565b5b505050565b6101a391905b8082111561019f5760008082016000905550600101610185565b5090565b90565b610540806101b56000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634420e48614610051578063609ff1bd14610095578063b3f98adc146100b9578063c040e6b8146100ea575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610116565b005b61009d6102d3565b604051808260ff1660ff16815260200191505060405180910390f35b6100e8600480360360208110156100cf57600080fd5b81019080803560ff169060200190929190505050610388565b005b6100f26104f9565b6040518082600381111561010257fe5b60ff16815260200191505060405180910390f35b600180600381111561012457fe5b6000809054906101000a900460ff16600381111561013e57fe5b1461014857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101f15750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101fb576102cf565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550601e600354014211156102ce5760026000806101000a81548160ff021916908360038111156102c857fe5b02179055505b5b5050565b600060038060038111156102e357fe5b6000809054906101000a900460ff1660038111156102fd57fe5b1461030757600080fd5b600080905060008090505b6002805490508160ff161015610378578160028260ff168154811061033357fe5b9060005260206000200160000154111561036b5760028160ff168154811061035757fe5b906000526020600020016000015491508093505b8080600101915050610312565b506000811161038357fe5b505090565b600280600381111561039657fe5b6000809054906101000a900460ff1660038111156103b057fe5b146103ba57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061042257506002805490508360ff1610155b1561042d57506104f5565b60018160010160006101000a81548160ff021916908315150217905550828160010160016101000a81548160ff021916908360ff160217905550806000015460028460ff168154811061047c57fe5b9060005260206000200160000160008282540192505081905550601e600354014211156104f35760036000806101000a81548160ff021916908360038111156104c157fe5b02179055507f6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef03538235160405160405180910390a15b505b5050565b6000809054906101000a900460ff168156fea265627a7a7231582073d1e1b77a16bbcb63c64ed2a6333b8b746aa69867bf5b2aadbfc726933258f264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6F5 CODESIZE SUB DUP1 PUSH2 0x6F5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x153 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x141 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x1A6 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x17A JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x17F JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A3 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x185 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x540 DUP1 PUSH2 0x1B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x102 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13E JUMPI INVALID JUMPDEST EQ PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1F1 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1FB JUMPI PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2E3 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2FD JUMPI INVALID JUMPDEST EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x378 JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x333 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x357 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x312 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH2 0x383 JUMPI INVALID JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x396 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B0 JUMPI INVALID JUMPDEST EQ PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x422 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x42D JUMPI POP PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x47C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4C1 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH20 0xD1E1B77A16BBCB63C64ED2A6333B8B746AA69867 0xBF JUMPDEST 0x2A 0xAD 0xBF 0xC7 0x26 SWAP4 ORIGIN PC CALLCODE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "60:2286:0:-;;;308:10;287:31;;;;;;;;;;;;;;;;;;;;;;;;;;651:252;8:9:-1;5:2;;;30:1;27;20:12;5:2;651:252:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;651:252:0;;;;;;;;;;;;;;;;716:10;702:11;;:24;;;;;;;;;;;;;;;;;;765:1;736:6;:19;743:11;;;;;;;;;;;736:19;;;;;;;;;;;;;;;:26;;:30;;;;831:13;812:32;;:9;:32;;;;;:::i;:::-;;862:9;854:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;893:3;881:9;:15;;;;651:252;60:2286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634420e48614610051578063609ff1bd14610095578063b3f98adc146100b9578063c040e6b8146100ea575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610116565b005b61009d6102d3565b604051808260ff1660ff16815260200191505060405180910390f35b6100e8600480360360208110156100cf57600080fd5b81019080803560ff169060200190929190505050610388565b005b6100f26104f9565b6040518082600381111561010257fe5b60ff16815260200191505060405180910390f35b600180600381111561012457fe5b6000809054906101000a900460ff16600381111561013e57fe5b1461014857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101f15750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101fb576102cf565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550601e600354014211156102ce5760026000806101000a81548160ff021916908360038111156102c857fe5b02179055505b5b5050565b600060038060038111156102e357fe5b6000809054906101000a900460ff1660038111156102fd57fe5b1461030757600080fd5b600080905060008090505b6002805490508160ff161015610378578160028260ff168154811061033357fe5b9060005260206000200160000154111561036b5760028160ff168154811061035757fe5b906000526020600020016000015491508093505b8080600101915050610312565b506000811161038357fe5b505090565b600280600381111561039657fe5b6000809054906101000a900460ff1660038111156103b057fe5b146103ba57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061042257506002805490508360ff1610155b1561042d57506104f5565b60018160010160006101000a81548160ff021916908315150217905550828160010160016101000a81548160ff021916908360ff160217905550806000015460028460ff168154811061047c57fe5b9060005260206000200160000160008282540192505081905550601e600354014211156104f35760036000806101000a81548160ff021916908360038111156104c157fe5b02179055507f6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef03538235160405160405180910390a15b505b5050565b6000809054906101000a900460ff168156fea265627a7a7231582073d1e1b77a16bbcb63c64ed2a6333b8b746aa69867bf5b2aadbfc726933258f264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x102 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13E JUMPI INVALID JUMPDEST EQ PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1F1 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1FB JUMPI PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2E3 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2FD JUMPI INVALID JUMPDEST EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x378 JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x333 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x357 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x312 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH2 0x383 JUMPI INVALID JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x396 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B0 JUMPI INVALID JUMPDEST EQ PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x422 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x42D JUMPI POP PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x47C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4C1 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH20 0xD1E1B77A16BBCB63C64ED2A6333B8B746AA69867 0xBF JUMPDEST 0x2A 0xAD 0xBF 0xC7 0x26 SWAP4 ORIGIN PC CALLCODE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "60:2286:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:2286:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1013:336;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1013:336:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1879:465;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1409:464;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1409:464:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;287:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1013:336;1066:9;548:8;539:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;531:26;;;;;;1149:11;;;;;;;;;;;1135:25;;:10;:25;;;;:50;;;;1164:6;:15;1171:7;1164:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;1135:50;1131:63;;;1187:7;;1131:63;1228:1;1203:6;:15;1210:7;1203:15;;;;;;;;;;;;;;;:22;;:26;;;;1263:5;1239:6;:15;1246:7;1239:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;1300:10;1289:9;;:21;1282:3;:29;1278:57;;;1322:10;1314:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1278:57;565:1;1013:336;;:::o;1879:465::-;1950:22;1924:10;548:8;539:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;531:26;;;;;;2027:24;2054:1;2027:28;;2070:10;2083:1;2070:14;;2065:234;2093:9;:16;;;;2086:4;:23;;;2065:234;;;2163:16;2135:9;2145:4;2135:15;;;;;;;;;;;;;;;;;:25;;;:44;2131:168;;;2218:9;2228:4;2218:15;;;;;;;;;;;;;;;;;:25;;;2199:44;;2280:4;2261:23;;2131:168;2111:6;;;;;;;2065:234;;;;2334:1;2315:16;:20;2307:29;;;;565:1;1879:465;;:::o;1409:464::-;1459:10;548:8;539:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;531:26;;;;;;1527:20;1550:6;:18;1557:10;1550:18;;;;;;;;;;;;;;;1527:41;;1582:6;:12;;;;;;;;;;;;:46;;;;1612:9;:16;;;;1598:10;:30;;;;1582:46;1578:59;;;1630:7;;;1578:59;1661:4;1646:6;:12;;;:19;;;;;;;;;;;;;;;;;;1689:10;1675:6;:11;;;:24;;;;;;;;;;;;;;;;;;1747:6;:13;;;1712:9;1722:10;1712:21;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1792:10;1781:9;;:21;1774:3;:29;1770:80;;;1814:10;1806:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1831:17;;;;;;;;;;1770:80;565:1;;1409:464;;:::o;287:31::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "268800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "65800",
								"stage()": "1117",
								"vote(uint8)": "89804",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "MSTORE"
								},
								{
									"begin": 308,
									"end": 318,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "DUP1"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "EXP"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "DUP2"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "SLOAD"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "DUP2"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "MUL"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "NOT"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "AND"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "SWAP1"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "DUP4"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "DUP2"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "GT"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "ISZERO"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "JUMPI"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "INVALID"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "JUMPDEST"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "MUL"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "OR"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "SWAP1"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "SSTORE"
								},
								{
									"begin": 287,
									"end": 318,
									"name": "POP"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "POP"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "MLOAD"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "PUSHSIZE"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "CODESIZE"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "SUB"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "DUP1"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "PUSHSIZE"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "DUP4"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "CODECOPY"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "DUP2"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "DUP2"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "ADD"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "DUP2"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "ADD"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "SWAP1"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "DUP1"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "DUP1"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "MLOAD"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "SWAP1"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "ADD"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "SWAP1"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "SWAP3"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "SWAP2"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "SWAP1"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "POP"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "POP"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "POP"
								},
								{
									"begin": 716,
									"end": 726,
									"name": "CALLER"
								},
								{
									"begin": 702,
									"end": 713,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 702,
									"end": 713,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "EXP"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "DUP2"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "SLOAD"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "DUP2"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "MUL"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "NOT"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "AND"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "SWAP1"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "DUP4"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "AND"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "MUL"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "OR"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "SWAP1"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "SSTORE"
								},
								{
									"begin": 702,
									"end": 726,
									"name": "POP"
								},
								{
									"begin": 765,
									"end": 766,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 736,
									"end": 742,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "DUP1"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "SWAP1"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "SLOAD"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "SWAP1"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "EXP"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "SWAP1"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "DIV"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 743,
									"end": 754,
									"name": "AND"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "AND"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "AND"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "DUP2"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "MSTORE"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "ADD"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "SWAP1"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "DUP2"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "MSTORE"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "ADD"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 736,
									"end": 755,
									"name": "KECCAK256"
								},
								{
									"begin": 736,
									"end": 762,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 736,
									"end": 762,
									"name": "ADD"
								},
								{
									"begin": 736,
									"end": 766,
									"name": "DUP2"
								},
								{
									"begin": 736,
									"end": 766,
									"name": "SWAP1"
								},
								{
									"begin": 736,
									"end": 766,
									"name": "SSTORE"
								},
								{
									"begin": 736,
									"end": 766,
									"name": "POP"
								},
								{
									"begin": 831,
									"end": 844,
									"name": "DUP1"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "AND"
								},
								{
									"begin": 812,
									"end": 821,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "DUP2"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "SWAP2"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "SWAP1"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "JUMPDEST"
								},
								{
									"begin": 812,
									"end": 844,
									"name": "POP"
								},
								{
									"begin": 862,
									"end": 871,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 854,
									"end": 859,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 854,
									"end": 859,
									"name": "DUP1"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "EXP"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "DUP2"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "SLOAD"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "DUP2"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "MUL"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "NOT"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "AND"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "SWAP1"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "DUP4"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "DUP2"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "GT"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "ISZERO"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "JUMPI"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "INVALID"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "JUMPDEST"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "MUL"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "OR"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "SWAP1"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "SSTORE"
								},
								{
									"begin": 854,
									"end": 871,
									"name": "POP"
								},
								{
									"begin": 893,
									"end": 896,
									"name": "TIMESTAMP"
								},
								{
									"begin": 881,
									"end": 890,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 881,
									"end": 896,
									"name": "DUP2"
								},
								{
									"begin": 881,
									"end": 896,
									"name": "SWAP1"
								},
								{
									"begin": 881,
									"end": 896,
									"name": "SSTORE"
								},
								{
									"begin": 881,
									"end": 896,
									"name": "POP"
								},
								{
									"begin": 651,
									"end": 903,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMP"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP2"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SLOAD"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP2"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP4"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SSTORE"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP2"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP2"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "GT"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "ISZERO"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMPI"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP2"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP4"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "MSTORE"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "KECCAK256"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SWAP2"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SWAP2"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SWAP2"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SWAP2"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "GT"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "ISZERO"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMPI"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SSTORE"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMP"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMP"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "CODECOPY"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 2346,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582073d1e1b77a16bbcb63c64ed2a6333b8b746aa69867bf5b2aadbfc726933258f264736f6c63430005110032",
									".code": [
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "LT"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "SHR"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 2346,
											"name": "REVERT"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "DUP2"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "DUP1"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "AND"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "ADD"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "SWAP3"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "SWAP2"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "SWAP1"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "STOP"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "JUMPDEST"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "JUMPDEST"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "MLOAD"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "DUP3"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "AND"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "DUP2"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "MSTORE"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "ADD"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "SWAP2"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "MLOAD"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "DUP1"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "SWAP2"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "SUB"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "RETURN"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "JUMPDEST"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "DUP1"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "DUP2"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "ADD"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "DUP1"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "DUP1"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "AND"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "ADD"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "SWAP3"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "SWAP2"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "JUMPDEST"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "STOP"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "MLOAD"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "DUP3"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "DUP2"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "GT"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "ISZERO"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "JUMPI"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "INVALID"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "AND"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "DUP2"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "MSTORE"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "ADD"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "SWAP2"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "POP"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "POP"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "MLOAD"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "SWAP2"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "SUB"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "RETURN"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "JUMPDEST"
										},
										{
											"begin": 1066,
											"end": 1075,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 548,
											"end": 556,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "DUP2"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "GT"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPI"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "INVALID"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "EXP"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "DIV"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "DUP2"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "GT"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPI"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "INVALID"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "EQ"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "JUMPI"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "DUP1"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "REVERT"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "JUMPDEST"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "SLOAD"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "EXP"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "SWAP1"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "DIV"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1149,
											"end": 1160,
											"name": "AND"
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "AND"
										},
										{
											"begin": 1135,
											"end": 1145,
											"name": "CALLER"
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "AND"
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "EQ"
										},
										{
											"begin": 1135,
											"end": 1160,
											"name": "ISZERO"
										},
										{
											"begin": 1135,
											"end": 1185,
											"name": "DUP1"
										},
										{
											"begin": 1135,
											"end": 1185,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1135,
											"end": 1185,
											"name": "JUMPI"
										},
										{
											"begin": 1135,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1164,
											"end": 1170,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1178,
											"name": "DUP4"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "AND"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "MSTORE"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "ADD"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "SWAP1"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "MSTORE"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "ADD"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "KECCAK256"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "ADD"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "SLOAD"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "EXP"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "DIV"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "AND"
										},
										{
											"begin": 1135,
											"end": 1185,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1135,
											"end": 1185,
											"name": "JUMPDEST"
										},
										{
											"begin": 1131,
											"end": 1194,
											"name": "ISZERO"
										},
										{
											"begin": 1131,
											"end": 1194,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1131,
											"end": 1194,
											"name": "JUMPI"
										},
										{
											"begin": 1187,
											"end": 1194,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1187,
											"end": 1194,
											"name": "JUMP"
										},
										{
											"begin": 1131,
											"end": 1194,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1131,
											"end": 1194,
											"name": "JUMPDEST"
										},
										{
											"begin": 1228,
											"end": 1229,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "DUP5"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "AND"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "AND"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "DUP2"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "MSTORE"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "ADD"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "DUP2"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "MSTORE"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "ADD"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "KECCAK256"
										},
										{
											"begin": 1203,
											"end": 1225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1225,
											"name": "ADD"
										},
										{
											"begin": 1203,
											"end": 1229,
											"name": "DUP2"
										},
										{
											"begin": 1203,
											"end": 1229,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1229,
											"name": "SSTORE"
										},
										{
											"begin": 1203,
											"end": 1229,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1253,
											"name": "DUP5"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "AND"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "AND"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "MSTORE"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "ADD"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "DUP2"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "MSTORE"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "ADD"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "KECCAK256"
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ADD"
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "EXP"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "DUP2"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "SLOAD"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "DUP2"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "MUL"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "NOT"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "AND"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "SWAP1"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "DUP4"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "ISZERO"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "ISZERO"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "MUL"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "OR"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "SWAP1"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "SSTORE"
										},
										{
											"begin": 1239,
											"end": 1268,
											"name": "POP"
										},
										{
											"begin": 1300,
											"end": 1310,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "SLOAD"
										},
										{
											"begin": 1289,
											"end": 1310,
											"name": "ADD"
										},
										{
											"begin": 1282,
											"end": 1285,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "GT"
										},
										{
											"begin": 1278,
											"end": 1335,
											"name": "ISZERO"
										},
										{
											"begin": 1278,
											"end": 1335,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1278,
											"end": 1335,
											"name": "JUMPI"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1314,
											"end": 1319,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1319,
											"name": "DUP1"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "EXP"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "DUP2"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "SLOAD"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "DUP2"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "MUL"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "NOT"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "AND"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "SWAP1"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "DUP4"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "DUP2"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "GT"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "ISZERO"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "JUMPI"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "INVALID"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "JUMPDEST"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "MUL"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "OR"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "SWAP1"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "SSTORE"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "POP"
										},
										{
											"begin": 1278,
											"end": 1335,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1278,
											"end": 1335,
											"name": "JUMPDEST"
										},
										{
											"begin": 565,
											"end": 566,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 565,
											"end": 566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "POP"
										},
										{
											"begin": 1013,
											"end": 1349,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "JUMPDEST"
										},
										{
											"begin": 1950,
											"end": 1972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1934,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 548,
											"end": 556,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "DUP2"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "GT"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPI"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "INVALID"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "EXP"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "DIV"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "DUP2"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "GT"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPI"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "INVALID"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "EQ"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "JUMPI"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "DUP1"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "REVERT"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "JUMPDEST"
										},
										{
											"begin": 2027,
											"end": 2051,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2055,
											"name": "DUP1"
										},
										{
											"begin": 2027,
											"end": 2055,
											"name": "SWAP1"
										},
										{
											"begin": 2027,
											"end": 2055,
											"name": "POP"
										},
										{
											"begin": 2070,
											"end": 2080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "DUP1"
										},
										{
											"begin": 2070,
											"end": 2084,
											"name": "SWAP1"
										},
										{
											"begin": 2070,
											"end": 2084,
											"name": "POP"
										},
										{
											"begin": 2065,
											"end": 2299,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2065,
											"end": 2299,
											"name": "JUMPDEST"
										},
										{
											"begin": 2093,
											"end": 2102,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "DUP1"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "SLOAD"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "SWAP1"
										},
										{
											"begin": 2093,
											"end": 2109,
											"name": "POP"
										},
										{
											"begin": 2086,
											"end": 2090,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "AND"
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "LT"
										},
										{
											"begin": 2065,
											"end": 2299,
											"name": "ISZERO"
										},
										{
											"begin": 2065,
											"end": 2299,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2065,
											"end": 2299,
											"name": "JUMPI"
										},
										{
											"begin": 2163,
											"end": 2179,
											"name": "DUP2"
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2145,
											"end": 2149,
											"name": "DUP3"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "AND"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "DUP2"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "SLOAD"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "DUP2"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "LT"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "JUMPI"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "INVALID"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "JUMPDEST"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "SWAP1"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "MSTORE"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "KECCAK256"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "ADD"
										},
										{
											"begin": 2135,
											"end": 2160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2160,
											"name": "ADD"
										},
										{
											"begin": 2135,
											"end": 2160,
											"name": "SLOAD"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "GT"
										},
										{
											"begin": 2131,
											"end": 2299,
											"name": "ISZERO"
										},
										{
											"begin": 2131,
											"end": 2299,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2131,
											"end": 2299,
											"name": "JUMPI"
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2228,
											"end": 2232,
											"name": "DUP2"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "AND"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "DUP2"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "SLOAD"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "DUP2"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "LT"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "JUMPI"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "INVALID"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "JUMPDEST"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "SWAP1"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "MSTORE"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "KECCAK256"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "ADD"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "ADD"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "SLOAD"
										},
										{
											"begin": 2199,
											"end": 2243,
											"name": "SWAP2"
										},
										{
											"begin": 2199,
											"end": 2243,
											"name": "POP"
										},
										{
											"begin": 2280,
											"end": 2284,
											"name": "DUP1"
										},
										{
											"begin": 2261,
											"end": 2284,
											"name": "SWAP4"
										},
										{
											"begin": 2261,
											"end": 2284,
											"name": "POP"
										},
										{
											"begin": 2131,
											"end": 2299,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2131,
											"end": 2299,
											"name": "JUMPDEST"
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "DUP1"
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "DUP1"
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "ADD"
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "SWAP2"
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "POP"
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "POP"
										},
										{
											"begin": 2065,
											"end": 2299,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2065,
											"end": 2299,
											"name": "JUMP"
										},
										{
											"begin": 2065,
											"end": 2299,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2065,
											"end": 2299,
											"name": "JUMPDEST"
										},
										{
											"begin": 2065,
											"end": 2299,
											"name": "POP"
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "DUP2"
										},
										{
											"begin": 2315,
											"end": 2335,
											"name": "GT"
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "JUMPI"
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "INVALID"
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "JUMPDEST"
										},
										{
											"begin": 565,
											"end": 566,
											"name": "POP"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "POP"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "SWAP1"
										},
										{
											"begin": 1879,
											"end": 2344,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "JUMPDEST"
										},
										{
											"begin": 1459,
											"end": 1469,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 548,
											"end": 556,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "DUP2"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "GT"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPI"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "INVALID"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "EXP"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "DIV"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "DUP2"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "GT"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPI"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "INVALID"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 556,
											"name": "EQ"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "JUMPI"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "DUP1"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "REVERT"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "JUMPDEST"
										},
										{
											"begin": 1527,
											"end": 1547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1556,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1567,
											"name": "CALLER"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "AND"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "AND"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "MSTORE"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "ADD"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "SWAP1"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "DUP2"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "MSTORE"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "ADD"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "KECCAK256"
										},
										{
											"begin": 1527,
											"end": 1568,
											"name": "SWAP1"
										},
										{
											"begin": 1527,
											"end": 1568,
											"name": "POP"
										},
										{
											"begin": 1582,
											"end": 1588,
											"name": "DUP1"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "ADD"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "SWAP1"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "SLOAD"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "SWAP1"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "EXP"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "SWAP1"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "DIV"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1582,
											"end": 1594,
											"name": "AND"
										},
										{
											"begin": 1582,
											"end": 1628,
											"name": "DUP1"
										},
										{
											"begin": 1582,
											"end": 1628,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1582,
											"end": 1628,
											"name": "JUMPI"
										},
										{
											"begin": 1582,
											"end": 1628,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1612,
											"end": 1628,
											"name": "DUP1"
										},
										{
											"begin": 1612,
											"end": 1628,
											"name": "SLOAD"
										},
										{
											"begin": 1612,
											"end": 1628,
											"name": "SWAP1"
										},
										{
											"begin": 1612,
											"end": 1628,
											"name": "POP"
										},
										{
											"begin": 1598,
											"end": 1608,
											"name": "DUP4"
										},
										{
											"begin": 1598,
											"end": 1628,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1598,
											"end": 1628,
											"name": "AND"
										},
										{
											"begin": 1598,
											"end": 1628,
											"name": "LT"
										},
										{
											"begin": 1598,
											"end": 1628,
											"name": "ISZERO"
										},
										{
											"begin": 1582,
											"end": 1628,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1582,
											"end": 1628,
											"name": "JUMPDEST"
										},
										{
											"begin": 1578,
											"end": 1637,
											"name": "ISZERO"
										},
										{
											"begin": 1578,
											"end": 1637,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1578,
											"end": 1637,
											"name": "JUMPI"
										},
										{
											"begin": 1630,
											"end": 1637,
											"name": "POP"
										},
										{
											"begin": 1630,
											"end": 1637,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1630,
											"end": 1637,
											"name": "JUMP"
										},
										{
											"begin": 1578,
											"end": 1637,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1578,
											"end": 1637,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1665,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP2"
										},
										{
											"begin": 1646,
											"end": 1658,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1646,
											"end": 1658,
											"name": "ADD"
										},
										{
											"begin": 1646,
											"end": 1658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "EXP"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "DUP2"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "SLOAD"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "DUP2"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "MUL"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "NOT"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "AND"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "SWAP1"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "DUP4"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "ISZERO"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "ISZERO"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "MUL"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "OR"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "SWAP1"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "SSTORE"
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "POP"
										},
										{
											"begin": 1689,
											"end": 1699,
											"name": "DUP3"
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "DUP2"
										},
										{
											"begin": 1675,
											"end": 1686,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1675,
											"end": 1686,
											"name": "ADD"
										},
										{
											"begin": 1675,
											"end": 1686,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "EXP"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "DUP2"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "SLOAD"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "DUP2"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "MUL"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "NOT"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "AND"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "SWAP1"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "DUP4"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "AND"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "MUL"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "OR"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "SWAP1"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "SSTORE"
										},
										{
											"begin": 1675,
											"end": 1699,
											"name": "POP"
										},
										{
											"begin": 1747,
											"end": 1753,
											"name": "DUP1"
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "ADD"
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "SLOAD"
										},
										{
											"begin": 1712,
											"end": 1721,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1722,
											"end": 1732,
											"name": "DUP5"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "AND"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "DUP2"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "SLOAD"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "DUP2"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "LT"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "JUMPI"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "INVALID"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "JUMPDEST"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "SWAP1"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "MSTORE"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "KECCAK256"
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "ADD"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "ADD"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "DUP3"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "DUP3"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "SLOAD"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "ADD"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "SWAP3"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "POP"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "POP"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "DUP2"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "SWAP1"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "SSTORE"
										},
										{
											"begin": 1712,
											"end": 1760,
											"name": "POP"
										},
										{
											"begin": 1792,
											"end": 1802,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "SLOAD"
										},
										{
											"begin": 1781,
											"end": 1802,
											"name": "ADD"
										},
										{
											"begin": 1774,
											"end": 1777,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1774,
											"end": 1803,
											"name": "GT"
										},
										{
											"begin": 1770,
											"end": 1850,
											"name": "ISZERO"
										},
										{
											"begin": 1770,
											"end": 1850,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1770,
											"end": 1850,
											"name": "JUMPI"
										},
										{
											"begin": 1814,
											"end": 1824,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1806,
											"end": 1811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1811,
											"name": "DUP1"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "EXP"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "DUP2"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "SLOAD"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "DUP2"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "MUL"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "NOT"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "AND"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "DUP4"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "DUP2"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "GT"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "ISZERO"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "JUMPI"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "INVALID"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "JUMPDEST"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "MUL"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "OR"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "SSTORE"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "PUSH",
											"value": "6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "MLOAD"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "MLOAD"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "DUP1"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "SWAP2"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "SUB"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "SWAP1"
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "LOG1"
										},
										{
											"begin": 1770,
											"end": 1850,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1770,
											"end": 1850,
											"name": "JUMPDEST"
										},
										{
											"begin": 565,
											"end": 566,
											"name": "POP"
										},
										{
											"begin": 565,
											"end": 566,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 565,
											"end": 566,
											"name": "JUMPDEST"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1873,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "JUMPDEST"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "DUP1"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "SLOAD"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "EXP"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "SWAP1"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "DIV"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "AND"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "DUP2"
										},
										{
											"begin": 287,
											"end": 318,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"stage()": "c040e6b8",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"votingCompleted\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"internalType\":\"enum Ballot.Stage\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"constructor\":\"Create a new ballot with $(_numProposals) different proposals.\",\"register(address)\":{\"notice\":\"Give $(toVoter) the right to vote on this ballot. May only be called by $(chairperson).\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\"}}}},\"settings\":{\"compilationTarget\":{\"ba.sol\":\"Ballot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ba.sol\":{\"keccak256\":\"0x4fb0e921180b5e32ef35bba5442dfb7ff2197dcd874d44a6e26e7189adabaa08\",\"urls\":[\"bzz-raw://2b44d7ef351ac92e547306da1e80292aac99e674718503b7134d9d6127e0557e\",\"dweb:/ipfs/QmWA2dSc2zXbB6iwfKMToU2HP8jdWMydJmr85UPWYbAjjp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "ba.sol:Ballot",
								"label": "stage",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(Stage)16"
							},
							{
								"astId": 22,
								"contract": "ba.sol:Ballot",
								"label": "chairperson",
								"offset": 1,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 26,
								"contract": "ba.sol:Ballot",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)8_storage)"
							},
							{
								"astId": 29,
								"contract": "ba.sol:Ballot",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)11_storage)dyn_storage"
							},
							{
								"astId": 33,
								"contract": "ba.sol:Ballot",
								"label": "startTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)11_storage)dyn_storage": {
								"base": "t_struct(Proposal)11_storage",
								"encoding": "dynamic_array",
								"label": "struct Ballot.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(Stage)16": {
								"encoding": "inplace",
								"label": "enum Ballot.Stage",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Ballot.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)8_storage"
							},
							"t_struct(Proposal)11_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Proposal",
								"members": [
									{
										"astId": 10,
										"contract": "ba.sol:Ballot",
										"label": "voteCount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Voter)8_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "ba.sol:Ballot",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "ba.sol:Ballot",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 7,
										"contract": "ba.sol:Ballot",
										"label": "vote",
										"offset": 1,
										"slot": "1",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {
							"constructor": "Create a new ballot with $(_numProposals) different proposals.",
							"register(address)": {
								"notice": "Give $(toVoter) the right to vote on this ballot. May only be called by $(chairperson)."
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal)."
							}
						}
					}
				}
			}
		},
		"sources": {
			"ba.sol": {
				"ast": {
					"absolutePath": "ba.sol",
					"exportedSymbols": {
						"Ballot": [
							240
						]
					},
					"id": 241,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "106:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "106:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "127:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "127:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "147:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "147:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "83:109:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "223:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "223:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "197:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Stage",
									"id": 16,
									"members": [
										{
											"id": 12,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "261:4:0"
										},
										{
											"id": 13,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "266:3:0"
										},
										{
											"id": 14,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "271:4:0"
										},
										{
											"id": 15,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "277:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "249:33:0"
								},
								{
									"constant": false,
									"id": 20,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "287:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$16",
										"typeString": "enum Ballot.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 17,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 16,
										"src": "287:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 18,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 16,
											"src": "308:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
												"typeString": "type(enum Ballot.Stage)"
											}
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "308:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "329:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "354:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "362:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "354:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 24,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "373:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "392:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 27,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "392:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 28,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "392:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 31,
									"name": "votingCompleted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:2:0"
									},
									"src": "419:24:0"
								},
								{
									"constant": false,
									"id": 33,
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "453:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "453:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "529:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Stage_$16",
																"typeString": "enum Ballot.Stage"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 38,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "539:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 39,
																"name": "reqStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "548:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"src": "539:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															258,
															259
														],
														"referencedDeclaration": 258,
														"src": "531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "531:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "531:26:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "565:1:0"
											}
										]
									},
									"documentation": null,
									"id": 45,
									"name": "validStage",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "reqStage",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "509:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stage_$16",
													"typeString": "enum Ballot.Stage"
												},
												"typeName": {
													"contractScope": null,
													"id": 34,
													"name": "Stage",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 16,
													"src": "509:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "508:16:0"
									},
									"src": "489:84:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "692:211:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "702:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 51,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "716:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "716:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "702:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "702:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "736:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 57,
															"indexExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "743:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "736:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "736:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "765:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "736:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "736:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 62,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "812:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "812:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "831:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "812:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "812:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 68,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "854:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 69,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "862:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "854:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "854:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 73,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "881:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 74,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "893:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "881:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "881:15:0"
											}
										]
									},
									"documentation": "Create a new ballot with $(_numProposals) different proposals.",
									"id": 78,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "663:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 46,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "663:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:21:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "692:0:0"
									},
									"scope": 240,
									"src": "651:252:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1077:272:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 87,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "1135:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1135:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 89,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1149:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1135:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 91,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1164:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 93,
															"indexExpression": {
																"argumentTypes": null,
																"id": 92,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1171:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1164:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1164:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1135:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 97,
												"nodeType": "IfStatement",
												"src": "1131:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 86,
													"id": 96,
													"nodeType": "Return",
													"src": "1187:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 98,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1203:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 100,
															"indexExpression": {
																"argumentTypes": null,
																"id": 99,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1210:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1203:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1203:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1228:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1203:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1203:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 105,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1239:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 107,
															"indexExpression": {
																"argumentTypes": null,
																"id": 106,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1246:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1239:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1239:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1263:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1239:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1239:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 112,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1282:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 113,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "1289:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1300:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "1289:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 116,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1288:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1282:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 124,
												"nodeType": "IfStatement",
												"src": "1278:57:0",
												"trueBody": {
													"id": 123,
													"nodeType": "Block",
													"src": "1313:22:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 118,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1314:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 119,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1322:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Vote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1322:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1314:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 122,
															"nodeType": "ExpressionStatement",
															"src": "1314:18:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Give $(toVoter) the right to vote on this ballot.\n May only be called by $(chairperson).",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 83,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1066:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Reg",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1066:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 85,
											"modifierName": {
												"argumentTypes": null,
												"id": 82,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "1055:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1055:21:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1031:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1030:17:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:0:0"
									},
									"scope": 240,
									"src": "1013:336:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1472:401:0",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 187,
														"src": "1527:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 135,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1527:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1550:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 140,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 138,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "1557:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1557:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1550:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1527:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 142,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1582:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1582:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 144,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1598:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 145,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1612:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1612:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1598:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1582:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 150,
												"nodeType": "IfStatement",
												"src": "1578:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 134,
													"id": 149,
													"nodeType": "Return",
													"src": "1630:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 151,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1646:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1646:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1661:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1646:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1646:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 157,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1675:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 160,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "1689:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1675:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1675:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 163,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1712:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 165,
															"indexExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "1722:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1712:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1712:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 167,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1747:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1747:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1712:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1712:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 171,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1774:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 172,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "1781:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1792:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "1781:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 175,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1780:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1774:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 186,
												"nodeType": "IfStatement",
												"src": "1770:80:0",
												"trueBody": {
													"id": 185,
													"nodeType": "Block",
													"src": "1805:45:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 177,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1806:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 178,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1814:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Done",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1814:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1806:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 181,
															"nodeType": "ExpressionStatement",
															"src": "1806:18:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 182,
																	"name": "votingCompleted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1831:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1831:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 184,
															"nodeType": "EmitStatement",
															"src": "1826:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Give a single vote to proposal $(toProposal).",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 131,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1459:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Vote",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1459:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 133,
											"modifierName": {
												"argumentTypes": null,
												"id": 130,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "1448:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1448:22:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1423:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 127,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1423:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1422:18:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1472:0:0"
									},
									"scope": 240,
									"src": "1409:464:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1974:370:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "2027:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2027:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 200,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2054:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2027:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 212,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "2135:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 214,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "2145:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2135:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "2135:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 216,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2163:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2135:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 230,
													"nodeType": "IfStatement",
													"src": "2131:168:0",
													"trueBody": {
														"id": 229,
														"nodeType": "Block",
														"src": "2181:118:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 218,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2199:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 219,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "2218:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 221,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 220,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 202,
																				"src": "2228:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2218:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 222,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "2218:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2199:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 224,
																"nodeType": "ExpressionStatement",
																"src": "2199:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 225,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "2261:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 226,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "2280:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2261:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 228,
																"nodeType": "ExpressionStatement",
																"src": "2261:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 205,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2086:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 206,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2093:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2093:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"initializationExpression": {
													"assignments": [
														202
													],
													"declarations": [
														{
															"constant": false,
															"id": 202,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 231,
															"src": "2070:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 201,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2070:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 204,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2070:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2111:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 209,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 211,
													"nodeType": "ExpressionStatement",
													"src": "2111:6:0"
												},
												"nodeType": "ForStatement",
												"src": "2065:234:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "winningVoteCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2315:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2334:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2315:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 232,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "2307:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2307:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "2307:29:0"
											}
										]
									},
									"documentation": null,
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 191,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1924:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1924:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 193,
											"modifierName": {
												"argumentTypes": null,
												"id": 190,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "1913:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1913:22:0"
										}
									],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:2:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1950:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 194,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1949:24:0"
									},
									"scope": 240,
									"src": "1879:465:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 241,
							"src": "60:2286:0"
						}
					],
					"src": "36:2313:0"
				},
				"id": 0
			}
		}
	}
}